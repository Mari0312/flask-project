# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeastalk


env:
  EB_PACKAGE_S3_BUCKET_NAME: "myflask-app"
  EB_APPLICATION_NAME: "MyFlask"
  EB_ENVIRONMENT_NAME: "Myflask-env"
  DEPLOY_PACKAGE_NAME: "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-central-1"


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.9.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.dev.txt
      - name: Lint
        run:
          flake8 app
      - name: Tests
        run: |
          cd app
          python -m pytest ../tests
  build:
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - name: Git clone our repo
        uses: actions/checkout@v3

      - name: Create .env
        run:
          touch .env

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: Print Happy Massage for CI finish
        run: echo "CI Pipline part Finished successfully!"
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanstalk Application Version
        run:
          aws elasticbeanstalk create-application-version
          --application-name ${{ env.EB_APPLICATION_NAME }}
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}"
          --version-label ${{ github.sha }}

      - name: Deploy new ElasticBeanstalk Application Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Var-${{ github.sha }}"
